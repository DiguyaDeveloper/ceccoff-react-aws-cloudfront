name: Deploy React App

on:
  workflow_dispatch:
    inputs:
      AWS_ACCESS_KEY_ID:
        description: "AWS Access Key ID"
        required: true
        type: string
      AWS_SECRET_ACCESS_KEY:
        description: "AWS Secret Access Key"
        required: true
        type: string
      AWS_REGION:
        description: "AWS Region"
        required: false
        default: "us-east-1"
        type: string
      CLOUDFRONT_DISTRIBUTION_ID:
        description: "CloudFront Distribution ID"
        required: true
        type: string
      S3_BUCKET:
        description: "S3 Bucket Name"
        required: true
        type: string
      ENVIRONMENT:
        description: "Ambiente (dev, staging, prd)"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - staging
          - prd

jobs:
  deploy:
    name: Build e Deploy para S3
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código-fonte
        uses: actions/checkout@v4

      - name: Configurar credenciais da AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ inputs.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.AWS_REGION }}

      - name: Instalar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Instalar dependências
        run: npm install

      - name: Criar build do React baseado no ambiente
        run: |
          set -e
          NODE_ENV=${{ inputs.ENVIRONMENT }} npm run build

      - name: Garantir que o CloudFront pode acessar o S3 privado
        run: |
          aws s3api put-bucket-policy --bucket ${{ inputs.S3_BUCKET }} --policy '{
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": "cloudfront.amazonaws.com"
                },
                "Action": "s3:GetObject",
                "Resource": "arn:aws:s3:::${{ inputs.S3_BUCKET }}/*",
                "Condition": {
                  "StringEquals": {
                    "AWS:SourceArn": "arn:aws:cloudfront::${{ secrets.AWS_ACCOUNT_ID }}:distribution/${{ inputs.CLOUDFRONT_DISTRIBUTION_ID }}"
                  }
                }
              }
            ]
          }'

      - name: Upload para o S3 (Bucket Privado)
        run: aws s3 sync build/ s3://${{ inputs.S3_BUCKET }} --delete --exact-timestamps

      - name: Invalidar cache do CloudFront
        run: aws cloudfront create-invalidation --distribution-id ${{ inputs.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
